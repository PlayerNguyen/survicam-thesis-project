from fastapi import (
    APIRouter,
    HTTPException,
    File,
    BackgroundTasks,
    Response,
)
from fastapi.responses import FileResponse
from typing import Annotated, List

from pydantic import BaseModel
from utils import embeddings
from store import image_store

router = APIRouter()


@router.get(
    "/{filename}",
    # Set what the media type will be in the autogenerated OpenAPI specification.
    # fastapi.tiangolo.com/advanced/additional-responses/#additional-media-types-for-the-main-response
    # responses={200: {"content": {"image/png": {}}}},
    # Prevent FastAPI from adding "application/json" as an additional
    # response media type in the autogenerated OpenAPI specification.
    # https://github.com/tiangolo/fastapi/issues/3258
    response_class=FileResponse,
)
def get_asset_by_id(filename: str):
    if not image_store.exists(filename):
        raise HTTPException(status_code=404, detail="Item not found")

    return FileResponse(path=image_store.get_file_path(filename))
